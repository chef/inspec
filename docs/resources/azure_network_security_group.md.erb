---
title: About the azure_network_security_group Resource
platform: azure
---

# azure\_network\_security\_group

Use the `azure_network_security_group` InSpec audit resource to verify that the NSG is configured correctly

## Syntax

The name of the resource group is specified, as well as the NSG name.  Both passed as parameters on the resource:

    describe azure_network_security_group(name: 'MyResourceGroup', name:'Inspec-NSG') do
      its('property') { should eq 'value' }
    end

where

* `MyResourceGroup` is the name of the resource group being interrogated
* `name` is the name of the network security group we want to validate
* `property` is one a resource property
* `value` is the expected output from the matcher

## Examples

The following examples show how to use this InSpec audit resource:

### Ensure the Network Security Group has security rules configured.

    describe azure_network_security_group(name: 'MyResourceGroup', name: 'Inspec-Azure') do
        
        # should have security rules defined.
        it { should have_security_rules }

    end

### Ensure that the Network Security Group contains and does not contain specific security rules

    describe azure_network_security_group(name: 'MyResourceGroup', name: 'Inspec-Azure') do

        # Should have an SSH rule
        its('security_rules') { should include 'SSH-22' }

        # Should not have a RDP rule configured
        its('security_rules') { should_not include 'RDP' }
    end

<br>

## Parameters

* `group_name`, `name`

## Parameter Examples

The options that can be passed to the resource are as follows.

### group_name (required)

Use this parameter to define the Azure Resource Group where the NSG resides.

    describe azure_virtual_machine_data_disk(group_name: 'InSpec-Azure') do
        ...
    end

### name

Use this parameter to define the name of the Azure resource to test.

    describe azure_virtual_machine_data_disk(group_name: 'InSpec-Azure', name: 'Inspec-NSG') do
        ...
    end

If both `group_name` and `name` is set then `name` takes priority

These options can also be set using the environment variables:

* `AZURE_RESOURCE_GROUP_NAME`
* `AZURE_RESOURCE_NAME`

When the options have been set as well as the environment variables, the environment variables take priority.

<br>

## Parameter Example

    describe azure_generic_resource(group_name: 'Inspec-Azure', name: 'Inspec-NSG') do
      its('location') { should eq 'westeurope' }
    end

<br>

## Properties

* `name`, `location` ,`has_security_rules`, `security_rules`, `has_subnets`, `subnets_count`, `subnets`

<br>

## Property Examples

This InSpec audit resource has the following properties:

### name

Tests the name of the resource group.

    its('name') { should cmp 'Inspec-NSG' }

### location

Tests where in Azure the resource group is located.

    its('location') { should cmp 'westeurope' }

### has_security_rules

Tests to see if the NSG has any security rules.

    # should have security rules defined.
    it { should have_security_rules }

### security_rules

Verify that the NSG has, or does not have specific security rules.

    # Should have a rule by specified name
    its('security_rules') { should include 'SSH-22' }

    # Should not have a RDP rule configured
    its('security_rules') { should_not include 'RDP' }

### has_subnets

Tests to ensure the NSG has subnets associated with it.

    # NSG should have subnets attached to it
    it {should have_subnets }

### subnets_count

Check the number of subnets the NSG has.

    # NSG should have subnets, at least one or more
    its('subnets_count?') { should be > 0 }

    # NGG should have one subnet associated with it
    its('subnets_count?') { should eq 1 }


### subnets
Check that the subnet with a specific name is attached to the NSG

    # NSG should contain a subnet with the name InSpec-Subnet
    its('subnets') { should include 'Inspec-Subnet' }

<br>

## Matchers

This resource has a number of special matchers that provide a simple way to test if a specific Azure Resource type exists in the resource group.

For a full list of available matchers, please visit our [matchers page](https://www.inspec.io/docs/reference/matchers/).

###  have_subnets

Use this matcher to test if the network security group has any subnets.

 it {should have_subnets }

### have_security_rules

Use this matcher to test that the NGS contains security rules .

    # should have security rules defined.
    it { should have_security_rules }


<br>

## References

For more information on Azure Ruby SDK resources, see:

* [Azure Ruby SDK - Resources](https://github.com/Azure/azure-sdk-for-ruby/tree/master/management/azure_mgmt_resources)
* [Network Security Group](https://github.com/chef/inspec/blob/fc990346f2438690f0ac36a9f6606e61574a79b8/test/azure/verify/controls/network_security_group.rb)
